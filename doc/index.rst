=====================================================
Инициализатор DDR *ddrinit*. Руководство программиста
=====================================================

.. contents:: Содержание
   :local:
   :backlinks: entry

О документе
===========

Документ содержит описание ПО для инициализации DDR-подсистемы СнК MCom-03/Solaris.

Основные особенности
====================

Возможности:

* Инициализация DDR-подсистемы СнК MCom-03/Solaris.

* Сборка для архитектур MIPS64R6, MIPS32, Aarch64.

* Инициализация однорангового и двухрангового типов памяти DDR4:

  * поддержка всех скоростей передачи данных стандарта JESD79-4B:
    1333, 1600, 1866, 2133, 2400, 2666, 2933, 3200 MT/s.

* Инициализация модулей нерегистровой памяти UDIMM__.

  __ https://en.wikipedia.org/wiki/DIMM

* Установка временных параметров (таймингов) DDR-памяти:

  * считанных из SPD__ EEPROM (согласно стандарту JESD21-C секции 4.1) по I2C-интерфейсу;

    __ https://en.wikipedia.org/wiki/Serial_presence_detect

  * заданных на этапе конфигурации ПО.

* Выполнение одномерных (1D) тренингов DDR-подсистемы для оптимизации временных задержек:

  * Read gate,
  * Write leveling (DQS/CK skew compensation),
  * Read 1D,
  * Write 1D,
  * Read per-bit DQ deskew (aka "per-bit leveling", "DQ calibration" or "DQ-DQS deskew"),
  * Max read latency,
  * Command/Address (только для LPDDR),
  * MREP, DWL, MRD, MWD (только для LRDIMM).

* Для СнК Solaris:

  * сборка для режимов загрузки СнК "No start", "CPU0 Direct boot", "CPU0 Secure boot".

* Возможности отладки:

  * инициализация UART, печать информационных и отладочных сообщений в UART;
  * лог обращений к регистрам.

* Управление конфигурацией сборки с использованием Kconfig__: количество контроллеров DDR,
  скорости передачи, использование SPD EEPROM, выполнение тренингов и т.п.

  __ https://www.kernel.org/doc/html/latest/kbuild/kconfig-language.html

Не поддерживается:

* Инициализация типов памятей DDR3, LPDDR3, LPDDR4.

* Инициализация четырехранговой памяти.

* Инициализация DIMM-модулей в ненулевых DIMM-разъемах каждого DDR-контроллера.

* DRAM burst inverleave.

* Выполнение двумерных (2D) тренингов DDR-подсистемы (тренинг Vref).

* Коррекция ошибок встроенным ECC.

* Проверка четности шины адреса/команд (Comman/Address parity check).

* Инициализация типов модулей RDIMM__, LRDIMM, 3DS DIMM.

  __ https://en.wikipedia.org/wiki/Registered_memory

* Работа СнК в двухканальном__ режиме.

  __ https://en.wikipedia.org/wiki/Multi-channel_memory_architecture

* Динамическое определение типа памяти из SPD EEPROM, тип памяти задается на этапе
  конфигурирования ПО.

* Чтение параметров DDR-подсистемы из eFUSE.

* Для СнК Solaris:

  * работа СнК в четырехканальном режиме;
  * независимая установка частоты DDR-каналов 1 и 2, 3 и 4.

Исходные коды
=============

Получение
---------

TBD

Описание
--------

Дерево исходных кодов представлено на диаграмме::

  ├── configs/
  │   ├── ...
  │   ├── solarisbub_defconfig
  │   └── mcom03bub_defconfig
  ├── doc/
  ├── include/
  ├── Kconfig
  ├── Makefile
  ├── output/
  ├── scripts/
  └── src/

Описание компонентов исходного кода:

* ``configs`` --- директория с файлами конфигурации ПО для различных модулей на основе
  MCom-03/Solaris;

* ``doc`` --- директория с файлами документации;

* ``include`` --- директория, содержащая все заголовочные файлы проекта;

* ``Kconfig`` --- корневой Kconfig-файл;

* ``Makefile`` --- Makefile для сборки проекта;

* ``output`` --- директория с результатами сборки;

* ``scripts`` --- директория с дополнительными утилитами для конфигурирования и сборки проекта;

* ``src`` --- директория с исходным кодом.

Сборка
======

Для сборки ПО необходимо:

#. Настроить среду сборки;

#. Сконфигурировать ПО;

#. Запустить сборку.

Среда сборки
------------

Для настройки среды сборки выполнить:

#. Установить кросс-компилятор соответствующий целевой архитектуре.

#. Установить пакет *kconfiglib*::

     pip install --user kconfiglib

#. Добавить путь до кросс-компилятора в переменную ``PATH``.

#. Добавить путь до скриптов *kconfiglib* в переменную ``PATH``::

     export PATH=~/.local/bin/:$PATH

#. Установить префикс кросс-компилятора в переменную ``CROSS_COMPILE``.

Конфигурирование
----------------

Установить конфигурацию для выбранного модуля::

  make <board>_defconfig

Если для модуля не существует конфигурации, необходимо ее создать
(подробнее см. `Портирование на модуль`_).

Для изменения конфигурации выполнить::

  make menuconfig

Описание доступных опций конфигурации приведено в главе `Опции конфигурации`_.

Запуск сборки
-------------

Для запуска сборки выполнить::

  make && make install

Результаты сборки
-----------------

Результаты сборки ПО доступны в директории ``output``:

* ``ddrinit0.elf`` --- код нулевого этапа инициализации DDR-подсистемы (подробнее см.
  `Этапы инициализации DDR`_);

* ``ddrinit1-fw1d.elf`` --- код выполнения одномерных тренингов DDR-подсистемы, состоит из кода
  управления и прошивки PHY PMU;

* ``ddrinit2-fw2d.elf`` --- код выполнения двумерных тренингов DDR-подсистемы, состоит из кода
  управления и прошивки PHY PMU;

* ``ddrinit3.elf`` --- код третьего этапа инициализации DDR-подсистемы.

Этапы инициализации DDR
=======================

DDR-подсистемы СнК инициализируются последовательно. Если инициализация подсистемы завершилась с
ошибкой, начнется инициализация следующей подсистемы. Инициализация DDR завершается корректно, если
хотя бы одна DDR-подсистема инициализирована успешно.

Процедура инициализации DDR-подсистемы состоит из 4 этапов. Этапы 0, 1, 3 являются обязательными,
этап 2 является необязательным.

Этап 0 --- первичная инициализация СнК и DDR PHY:

#. Первичная инициализация СнК MCom-03/Solaris:

   #. Вывод необходимых подсистем из состояния сброса.
   #. Включение частот, необходимых для запуска загрузчика следующего уровня.
   #. Инициализация UART.
   #. Инициализация I2C и чтение SPD EEPROM (если включена опция ``CONFIG_SPD_EEPROM``),
      I2С-адреса DIMM-модулей определяются конфигурацией, подробнее см. `Опции конфигурации`_.

#. Установка сброса DDR-контроллера (assert presetn, core_ddrc_rstn).
#. Настройка PLL, включение тактовых частот DDR-контроллера, DDR-PHY.
#. Снятие сброса APB-порта (configuration port) DDR-контроллера (deassert presetn).
#. Первичная инициализация DDR-контроллера: запись таймингов памяти, настройка трансляции адресов
   AXI/DRAM.
#. Снятие сброса DDR-контроллера (deassert core_ddrc_rstn).
#. Снятие сброса DDR-PHY.
#. Первичная инициализация DDR-PHY.

Этап 1 --- одномерный трейнинг:

#. Загрузка прошивки инструкций для проведения одномерных тренингов в память DDR-PHY IMEM.
#. Загрузка прошивки данных для проведения одномерных тренингов в память DDR-PHY DMEM.
#. Загрузка конфигурационных параметров для проведения одномерных тренингов в память DDR-PHY DMEM.
#. Запуск одномерных тренингов для DDR4 (в порядке исполнения):

   #. Read Gate,
   #. Write Leveling,
   #. Read 1D,
   #. Write 1D,
   #. Read deskew,
   #. Max read latency.

#. Получение и анализ результатов тренингов.

Этап 2 (опциональный) --- двумерный трейнинг:

#. Загрузка прошивки инструкций для проведения двумерных тренингов в память DDR-PHY IMEM.
#. Загрузка прошивки данных для проведения двумерных тренингов в память DDR-PHY DMEM.
#. Загрузка конфигурационных параметров для проведения двумерных тренингов в память DDR-PHY DMEM.
#. Запуск процедуры двумерных тренингов.
#. Получение и анализ результатов тренингов.

Этап 3 --- финальная инициализация СнК и DDR PHY:

#. Финальная инициализация DDR-PHY.
#. Финальная инициализация DDR-контроллера.
#. Инициализация коммутатора NOC СнК Solaris:

   #. Настройка L3-кэша (LLC).
   #. Настройка ССС и включение когерентности GPU и Daimyo CPU.
   #. Настройка IOMMU.
   #. Настройка правил хэширования и чередования адресов.

Опции конфигурации
==================

Опции конфигурации разделены на три типа:

#. Базовые --- опции значительно изменяющие конфигурацию ПО. Описание опций доступно
   в файле ``src/Kconfig.basic``.

#. Расширенные --- опции для тонкой настройки параметров DDR. Значения по умолчанию
   расширенных опций подходят для большиства модулей. Описание опций доступно в
   файле ``src/Kconfig.advanced``.

#. Опции сборки. Описание доступно в файле ``Konfig.build``.

Портирование
============

Портирование на СнК
-------------------

Для портирования ПО на новую СнК необходимо:

#. Добавить поддержку СнК в файл ``src/plat/Kconfig.plat``.

#. Реализовать функции, описанные в файле ``include/plat/plat.h``. Пример реализации функций для
   платформы Solaris находится в файле ``src/plat/solaris/solaris.c``.

Портирование на модуль
----------------------

Для портирования ПО на новый модуль необходимо:

#. Сконфигурировать ПО, использую конфигурацию для похожего модуля::

     make <board>_defconfig

#. Модифицировать базовые опции конфигурации::

     make menuconfig

#. Сохранить конфигурацию для нового модуля::

     make savedefconfig && mv defconfig configs/<new_board>_defconfig

Список протестированных DIMM-модулей
====================================

* HyperX HX426C16FB3K2/16:

  * 1 ранг;
  * 16 ГБ (комплект из двух 8 ГБ);
  * макс. скорость передачи 2666 MT/s.

* HyperX HX432C16FB3/16:

  * 2 ранга;
  * 16 ГБ;
  * макс. скорость передачи 3200 MT/s.
